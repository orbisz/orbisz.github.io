import{_ as o,c as e,a as n,o as l}from"./app-CwN1xCkZ.js";const r={};function s(i,t){return l(),e("div",null,t[0]||(t[0]=[n('<h3 id="项目名称-基于-netty-的仿桌面版微信聊天系统" tabindex="-1"><a class="header-anchor" href="#项目名称-基于-netty-的仿桌面版微信聊天系统"><span><strong>项目名称</strong>：基于 Netty 的仿桌面版微信聊天系统</span></a></h3><p><strong>技术栈</strong>：JavaFx、Netty4.x、SpringBoot、MySQL、DDD 领域驱动设计<br><strong>项目周期</strong>：2025.5 - 2025.6</p><hr><h3 id="项目描述" tabindex="-1"><a class="header-anchor" href="#项目描述"><span><strong>项目描述</strong></span></a></h3><p>设计并开发一款仿微信桌面端的即时通讯（IM）系统，实现用户登录、好友管理、实时聊天、消息通知等核心功能。通过 <strong>Netty 实现高性能网络通信</strong>，结合 <strong>JavaFx 构建桌面 UI</strong>，采用 <strong>DDD 分层架构</strong>提升代码可维护性，最终完成一个高可用、可扩展的聊天应用。</p><p><code>Netty</code> | <code>JavaFx</code> | <code>SpringBoot</code> | <code>MySQL</code> | <code>DDD</code> | <code>TCP长连接</code> | <code>消息协议设计</code> | <code>断线重连</code> | <code>多线程优化</code></p><h3 id="核心职责与成果" tabindex="-1"><a class="header-anchor" href="#核心职责与成果"><span><strong>核心职责与成果</strong></span></a></h3><ol><li><p><strong>技术架构设计</strong></p><ul><li>采用 <strong>DDD 四层架构</strong>（接口层、应用层、领域层、基础设施层）解耦业务逻辑与通信模块。</li><li>基于 <strong>Netty 实现 TCP 长连接通信</strong>，支持消息编解码、心跳检测、断线重连（5秒重试机制）。</li><li>使用 <strong>JavaFx 开发桌面 UI</strong>，完成登录窗口、聊天窗口、好友列表、消息提醒等组件化设计。</li></ul></li><li><p><strong>核心功能实现</strong></p><ul><li><strong>用户系统</strong>：基于 SpringBoot + MySQL 实现登录鉴权、好友关系管理（添加/删除/查询）。</li><li><strong>实时通信</strong>： <ul><li>文本消息收发：通过 Netty 自定义协议（消息头 + 消息体）保证数据传输可靠性。</li><li>消息状态同步：服务端推送未读消息，客户端本地存储聊天记录。</li></ul></li><li><strong>通知机制</strong>：桌面右下角弹窗提醒新消息，支持消息闪烁吸引用户注意力。</li></ul></li><li><p><strong>性能优化</strong></p><ul><li>使用 <strong>Netty 的零拷贝技术</strong>减少数据传输开销，单机支持 1000+ 并发连接。</li><li>通过 <strong>线程池隔离</strong> UI 渲染与网络 I/O 操作，避免界面卡顿。</li></ul></li><li><p><strong>项目亮点</strong></p><ul><li><strong>跨技术栈整合</strong>：将 JavaFx（前端）、Netty（通信）、SpringBoot（服务端）无缝结合，实现桌面端全栈开发。</li><li><strong>代码规范</strong>：遵循 DDD 设计思想，模块职责清晰，便于后续扩展（如支持文件传输、群聊）。</li></ul></li></ol><hr><h3 id="项目收获" tabindex="-1"><a class="header-anchor" href="#项目收获"><span><strong>项目收获</strong></span></a></h3><ul><li>深入掌握 <strong>Netty 的 NIO 通信模型</strong>及自定义协议设计，理解 Dubbo、RocketMQ 等框架的底层通信原理。</li><li>实践 <strong>DDD 分层架构</strong>，提升复杂业务的模块化设计能力。</li><li>全链路开发经验：从 UI 到服务端，独立完成一个完整的高性能桌面应用。</li></ul>',11)]))}const g=o(r,[["render",s]]),c=JSON.parse('{"path":"/blogs/Project/IM/IM.html","title":"基于 Netty 的仿桌面版微信聊天系统-学习日志","lang":"en-US","frontmatter":{"title":"基于 Netty 的仿桌面版微信聊天系统-学习日志","date":"2025/01/05","tags":["DDD","前后端分离","SpringBoot","RabbitMQ","Netty"],"categories":["后端开发"]},"headers":[{"level":3,"title":"项目名称：基于 Netty 的仿桌面版微信聊天系统","slug":"项目名称-基于-netty-的仿桌面版微信聊天系统","link":"#项目名称-基于-netty-的仿桌面版微信聊天系统","children":[]},{"level":3,"title":"项目描述","slug":"项目描述","link":"#项目描述","children":[]},{"level":3,"title":"核心职责与成果","slug":"核心职责与成果","link":"#核心职责与成果","children":[]},{"level":3,"title":"项目收获","slug":"项目收获","link":"#项目收获","children":[]}],"git":{"createdTime":1750948311000,"updatedTime":1754659489000,"contributors":[{"name":"zxy","email":"zxy0613zxy@outlook.com","commits":2},{"name":"zxy","email":"431559981@qq.com","commits":1}]},"filePathRelative":"blogs/Project/IM/IM.md"}');export{g as comp,c as data};
